name: API Key Check

on:
  workflow_dispatch:

jobs:
  check-api-keys:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Check QWEN_IMAGE API Key
      env:
        QWEN_IMAGE: ${{ secrets.QWEN_IMAGE }}
      run: |
        if [ -z "$QWEN_IMAGE" ]; then
          echo "‚ùå QWEN_IMAGE API key is not set"
          exit 1
        else
          echo "‚úÖ QWEN_IMAGE API key is configured"
          # API„Ç≠„Éº„ÅÆÂΩ¢Âºè„Çí„ÉÅ„Çß„ÉÉ„ÇØÔºàÊúÄÂàù„ÅÆÊï∞ÊñáÂ≠ó„ÅÆ„ÅøË°®Á§∫Ôºâ
          echo "Key format: ${QWEN_IMAGE:0:8}..."
        fi
        
    - name: Check CLAUDE_CODE_OAUTH_TOKEN
      env:
        CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
      run: |
        if [ -z "$CLAUDE_CODE_OAUTH_TOKEN" ]; then
          echo "‚ùå CLAUDE_CODE_OAUTH_TOKEN is not set"
          exit 1
        else
          echo "‚úÖ CLAUDE_CODE_OAUTH_TOKEN is configured"
          echo "Token format: ${CLAUDE_CODE_OAUTH_TOKEN:0:8}..."
        fi
        
    - name: Test QWEN Image API Connection
      env:
        QWEN_IMAGE: ${{ secrets.QWEN_IMAGE }}
      run: |
        # Kamui Code MCPÊé•Á∂ö„ÉÜ„Çπ„Éà
        if [[ "$QWEN_IMAGE" == https://kamui-code.ai* ]]; then
          echo "‚úÖ QWEN_IMAGE URL format is correct for Kamui Code MCP"
          echo "URL: $QWEN_IMAGE"
          
          # Á∞°Âçò„Å™Êé•Á∂ö„ÉÜ„Çπ„Éà
          response=$(curl -s -w "%{http_code}" -X GET -o /dev/null "$QWEN_IMAGE")
          
          if [ "$response" = "200" ] || [ "$response" = "405" ]; then
            echo "‚úÖ Kamui Code MCP endpoint is accessible"
          else
            echo "‚ö†Ô∏è Kamui Code MCP returned HTTP $response"
          fi
        else
          echo "‚ùå QWEN_IMAGE should be Kamui Code MCP URL, got: ${QWEN_IMAGE:0:20}..."
          exit 1
        fi
        
    - name: Summary
      if: success()
      run: |
        echo "üéâ All API keys are properly configured and accessible!"
        echo "Ready for automated image generation and posting."
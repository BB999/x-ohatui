name: Text Generator Module

on:
  workflow_call:

jobs:
  generate-text:
    runs-on: ubuntu-latest
    
    outputs:
      morning-text: ${{ steps.generate.outputs.morning-text }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Generate Morning Greeting Text
      id: generate
      env:
        CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
      run: |
        # Claude Code APIでおはようテキストを生成
        cat > prompt.json << 'EOF'
        {
          "model": "claude-3-5-sonnet-20241022",
          "max_tokens": 100,
          "messages": [
            {
              "role": "user",
              "content": "日本語で素敵なおはようの挨拶を1つ作って。20文字以内で、温かみがあって親しみやすい感じで。絵文字は使わないで。"
            }
          ]
        }
        EOF
        
        # Claude APIにリクエスト送信（3回リトライ）
        max_retries=3
        retry_count=0
        success=false
        
        while [ $retry_count -lt $max_retries ] && [ "$success" = "false" ]; do
          retry_count=$((retry_count + 1))
          echo "🔄 Attempt $retry_count/$max_retries: Sending request to Claude API..."
          
          response=$(curl -s -w "HTTPSTATUS:%{http_code}" -X POST https://api.anthropic.com/v1/messages \
            -H "Content-Type: application/json" \
            -H "x-api-key: $CLAUDE_CODE_OAUTH_TOKEN" \
            -H "anthropic-version: 2023-06-01" \
            -d @prompt.json)
          
          # HTTPステータスコードとレスポンス本体を分離
          http_code=$(echo "$response" | grep -o "HTTPSTATUS:[0-9]*" | cut -d: -f2)
          response_body=$(echo "$response" | sed 's/HTTPSTATUS:[0-9]*$//')
          
          echo "HTTP Status: $http_code"
          
          # 成功判定
          if [ "$http_code" = "200" ]; then
            echo "✅ API request successful"
            success=true
            break
          else
            echo "❌ Attempt $retry_count failed with status $http_code"
            echo "Error details: $response_body"
            
            if [ $retry_count -lt $max_retries ]; then
              echo "⏳ Waiting 5 seconds before retry..."
              sleep 5
            fi
          fi
        done
        
        # 全てのリトライが失敗した場合
        if [ "$success" = "false" ]; then
          echo "❌ All $max_retries attempts failed. Claude API is unavailable."
          echo "🚫 Stopping workflow execution."
          exit 1
        fi
        
        echo "API Response: $response_body"
        
        # レスポンスからテキストを抽出
        morning_text=$(echo "$response_body" | jq -r '.content[0].text // ""')
        
        # JSONパースエラーチェック
        if [ -z "$morning_text" ] || [ "$morning_text" = "null" ]; then
          echo "❌ Failed to extract text from API response"
          echo "🚫 Stopping workflow execution."
          exit 1
        fi
        
        echo "Generated text: $morning_text"
        
        # 文字数制限チェック（20文字以内）
        char_count=$(echo -n "$morning_text" | wc -m)
        echo "Character count: $char_count"
        
        if [ "$char_count" -gt 20 ]; then
          echo "⚠️ Text too long ($char_count chars), truncating..."
          morning_text=$(echo "$morning_text" | cut -c1-20)
        fi
        
        echo "📝 Final morning greeting: $morning_text"
        
        # アウトプットとして設定
        echo "morning-text=$morning_text" >> $GITHUB_OUTPUT
        
        echo "✅ Morning text generation completed"
        
    - name: Display Result
      run: |
        echo "📝 Generated morning greeting: ${{ steps.generate.outputs.morning-text }}"
        echo "Character count: $(echo -n "${{ steps.generate.outputs.morning-text }}" | wc -m)"
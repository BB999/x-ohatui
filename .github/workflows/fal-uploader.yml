name: FAL Uploader Module

on:
  workflow_call:
    outputs:
      fal-url:
        description: 'FAL画像URL'
        value: ${{ jobs.upload-to-fal.outputs.url }}

jobs:
  upload-to-fal:
    runs-on: ubuntu-latest
    
    outputs:
      url: ${{ steps.upload.outputs.fal-url }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Image Artifact
      uses: actions/download-artifact@v4
      with:
        name: morning-image
        path: ./
        
    - name: Check Downloaded Image
      run: |
        echo "📁 Checking downloaded image..."
        if [ -f "morning-image.png" ]; then
          echo "✅ Image found: morning-image.png"
          echo "📊 Size: $(stat -c%s morning-image.png) bytes"
        else
          echo "::error::❌ morning-image.png not found"
          exit 1
        fi
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install Dependencies
      run: |
        pip install fal-client python-dotenv
        
    - name: Create Upload Script
      run: |
        echo 'import os' > upload.py
        echo 'import sys' >> upload.py
        echo 'import fal_client as fal' >> upload.py
        echo '' >> upload.py
        echo 'try:' >> upload.py
        echo '    if not os.getenv("FAL_KEY"):' >> upload.py
        echo '        print("Error: FAL_KEY not found")' >> upload.py
        echo '        sys.exit(1)' >> upload.py
        echo '    if not os.path.exists("morning-image.png"):' >> upload.py
        echo '        print("Error: morning-image.png not found")' >> upload.py
        echo '        sys.exit(1)' >> upload.py
        echo '    print("Uploading to FAL...")' >> upload.py
        echo '    with open("morning-image.png", "rb") as f:' >> upload.py
        echo '        url = fal.upload(f.read(), "image/png")' >> upload.py
        echo '    print("Upload successful:", url)' >> upload.py
        echo '    with open("fal_url.txt", "w") as f:' >> upload.py
        echo '        f.write(url)' >> upload.py
        echo 'except Exception as e:' >> upload.py
        echo '    print("Error:", str(e))' >> upload.py
        echo '    sys.exit(1)' >> upload.py
        
    - name: Upload to FAL
      id: upload
      env:
        FAL_KEY: ${{ secrets.FAL_KEY }}
      run: |
        echo "🚀 Uploading image to FAL..."
        python3 upload.py
        
        if [ -f "fal_url.txt" ]; then
          FAL_URL=$(cat fal_url.txt)
          echo "fal-url=${FAL_URL}" >> $GITHUB_OUTPUT
          echo "✅ FAL URL: ${FAL_URL}"
        else
          echo "::error::❌ Failed to upload to FAL"
          exit 1
        fi
        
    - name: Save FAL URL as Artifact
      run: |
        echo "${{ steps.upload.outputs.fal-url }}" > fal-url.txt
        echo "📄 Saved FAL URL to artifact"
        
    - name: Upload URL Artifact
      uses: actions/upload-artifact@v4
      with:
        name: fal-url
        path: fal-url.txt
        retention-days: 1